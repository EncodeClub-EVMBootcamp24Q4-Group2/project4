{
  "address": "0x786FFAecEe4a094CE69b646706025E60B987A9fC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_proposalNames",
          "type": "bytes32[]"
        },
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_targetBlockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getVotePower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenContract",
      "outputs": [
        {
          "internalType": "contract IMyToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "votePowerSpent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "winnerName_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winningProposal_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x71d99d53abb5742543105f57f6e5f634242b16fa5efb16b1fd8a8bc1724b9655",
  "receipt": {
    "to": null,
    "from": "0xb3C1cd1ab988294747fb0049A567A83ff64cd625",
    "contractAddress": "0x786FFAecEe4a094CE69b646706025E60B987A9fC",
    "transactionIndex": 219,
    "gasUsed": "481460",
    "logsBloom": "0x
    "blockHash": "0x0edd11a14f88298def4a4aab56b15163b62ef89317d278aaf9bef4b8cd59a33c",
    "transactionHash": "0x71d99d53abb5742543105f57f6e5f634242b16fa5efb16b1fd8a8bc1724b9655",
    "logs": [],
    "blockNumber": 7165809,
    "cumulativeGasUsed": "13193547",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x446f677300000000000000000000000000000000000000000000000000000000",
      "0x4361747300000000000000000000000000000000000000000000000000000000",
      "0x4361707962617261730000000000000000000000000000000000000000000000"
    ],
    "0x2282A77eC5577365333fc71adE0b4154e25Bb2fa",
    7165807
  ],
  "numDeployments": 3,
  "solcInputHash": "da86dd05cf5f616057afacbb412bbbd4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proposalNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_targetBlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVotePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract IMyToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votePowerSpent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"winnerName_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenizedBallot.sol\":\"TokenizedBallot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenizedBallot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IMyToken {\\n    function getPastVotes(address, uint256) external view returns (uint256);\\n}\\n\\ncontract TokenizedBallot {\\n    struct Proposal {\\n        bytes32 name;\\n        uint voteCount;\\n    }\\n\\n    IMyToken public tokenContract;\\n    Proposal[] public proposals;\\n    uint256 public targetBlockNumber;\\n    mapping (address => uint256) public votePowerSpent;\\n\\n\\n    constructor(\\n        bytes32[] memory _proposalNames,\\n        address _tokenContract,\\n        uint256 _targetBlockNumber\\n    ) {\\n        tokenContract = IMyToken(_tokenContract);\\n        targetBlockNumber = _targetBlockNumber;\\n        require(_targetBlockNumber < block.number, \\\"Target block must be in the past\\\");\\n\\n        for (uint i = 0; i < _proposalNames.length; i++) {\\n            proposals.push(Proposal({name: _proposalNames[i], voteCount: 0}));\\n        }\\n    }\\n\\n    function vote(uint256 proposal, uint256 amount) external {\\n        require(proposal < proposals.length, \\\"Invalid proposal\\\");\\n        uint256 votePower = getVotePower(msg.sender);\\n        require(votePower >= amount, \\\"Not enough voting power\\\");\\n\\n        votePowerSpent[msg.sender] += amount;\\n        proposals[proposal].voteCount += amount;\\n    }\\n\\n    function getVotePower(address voter) public view returns (uint256) {\\n        return tokenContract.getPastVotes(voter, targetBlockNumber) - votePowerSpent[voter];\\n    }\\n\\n    function winningProposal() public view returns (uint winningProposal_) {\\n        uint winningVoteCount = 0;\\n        for (uint p = 0; p < proposals.length; p++) {\\n            if (proposals[p].voteCount > winningVoteCount) {\\n                winningVoteCount = proposals[p].voteCount;\\n                winningProposal_ = p;\\n            }\\n        }\\n    }\\n\\n    function winnerName() external view returns (bytes32 winnerName_) {\\n        winnerName_ = proposals[winningProposal()].name;\\n    }\\n}\",\"keccak256\":\"0x1c204520c1652f2a8e97e4b8d2a5a648c38985109243e68e051edb61126cf199\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161077538038061077583398101604081905261002f91610153565b600080546001600160a01b0319166001600160a01b03841617905560028190554381106100a25760405162461bcd60e51b815260206004820181905260248201527f54617267657420626c6f636b206d75737420626520696e207468652070617374604482015260640160405180910390fd5b60005b835181101561011857600160405180604001604052808684815181106100cd576100cd61022b565b6020908102919091018101518252600091810182905283546001818101865594835291819020835160029093020191825591909101519101558061011081610241565b9150506100a5565b50505050610268565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461014e57600080fd5b919050565b60008060006060848603121561016857600080fd5b83516001600160401b038082111561017f57600080fd5b818601915086601f83011261019357600080fd5b81516020828211156101a7576101a7610121565b8160051b604051601f19603f830116810181811086821117156101cc576101cc610121565b60405292835281830193508481018201928a8411156101ea57600080fd5b948201945b83861015610208578551855294820194938201936101ef565b97506102179050888201610137565b955050505050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b60006001820161026157634e487b7160e01b600052601160045260246000fd5b5060010190565b6104fe806102776000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639e90d0d91161005b5780639e90d0d914610104578063b384abef14610124578063bb9c092014610139578063e2ba53f01461014c57600080fd5b8063013cf08b1461008d5780632a8cd29e146100ba57806355a373d6146100d1578063609ff1bd146100fc575b600080fd5b6100a061009b3660046103d9565b610154565b604080519283526020830191909152015b60405180910390f35b6100c360025481565b6040519081526020016100b1565b6000546100e4906001600160a01b031681565b6040516001600160a01b0390911681526020016100b1565b6100c3610182565b6100c36101123660046103f2565b60036020526000908152604090205481565b610137610132366004610422565b6101ff565b005b6100c36101473660046103f2565b610309565b6100c36103a6565b6001818154811061016457600080fd5b60009182526020909120600290910201805460019091015490915082565b600080805b6001548110156101fa5781600182815481106101a5576101a5610444565b90600052602060002090600202016001015411156101e857600181815481106101d0576101d0610444565b90600052602060002090600202016001015491508092505b806101f281610470565b915050610187565b505090565b60015482106102485760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b60448201526064015b60405180910390fd5b600061025333610309565b9050818110156102a55760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820766f74696e6720706f776572000000000000000000604482015260640161023f565b33600090815260036020526040812080548492906102c4908490610489565b9250508190555081600184815481106102df576102df610444565b906000526020600020906002020160010160008282546102ff9190610489565b9091555050505050565b6001600160a01b038181166000818152600360205260408082205482546002549251630748d63560e31b81526004810195909552602485019290925291939192911690633a46b1a890604401602060405180830381865afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610396919061049c565b6103a091906104b5565b92915050565b600060016103b2610182565b815481106103c2576103c2610444565b906000526020600020906002020160000154905090565b6000602082840312156103eb57600080fd5b5035919050565b60006020828403121561040457600080fd5b81356001600160a01b038116811461041b57600080fd5b9392505050565b6000806040838503121561043557600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016104825761048261045a565b5060010190565b808201808211156103a0576103a061045a565b6000602082840312156104ae57600080fd5b5051919050565b818103818111156103a0576103a061045a56fea2646970667358221220bd158f930cc091a8576f6a761a4360d46c80605d4827764b67d78c017ce1630d64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80639e90d0d91161005b5780639e90d0d914610104578063b384abef14610124578063bb9c092014610139578063e2ba53f01461014c57600080fd5b8063013cf08b1461008d5780632a8cd29e146100ba57806355a373d6146100d1578063609ff1bd146100fc575b600080fd5b6100a061009b3660046103d9565b610154565b604080519283526020830191909152015b60405180910390f35b6100c360025481565b6040519081526020016100b1565b6000546100e4906001600160a01b031681565b6040516001600160a01b0390911681526020016100b1565b6100c3610182565b6100c36101123660046103f2565b60036020526000908152604090205481565b610137610132366004610422565b6101ff565b005b6100c36101473660046103f2565b610309565b6100c36103a6565b6001818154811061016457600080fd5b60009182526020909120600290910201805460019091015490915082565b600080805b6001548110156101fa5781600182815481106101a5576101a5610444565b90600052602060002090600202016001015411156101e857600181815481106101d0576101d0610444565b90600052602060002090600202016001015491508092505b806101f281610470565b915050610187565b505090565b60015482106102485760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b60448201526064015b60405180910390fd5b600061025333610309565b9050818110156102a55760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820766f74696e6720706f776572000000000000000000604482015260640161023f565b33600090815260036020526040812080548492906102c4908490610489565b9250508190555081600184815481106102df576102df610444565b906000526020600020906002020160010160008282546102ff9190610489565b9091555050505050565b6001600160a01b038181166000818152600360205260408082205482546002549251630748d63560e31b81526004810195909552602485019290925291939192911690633a46b1a890604401602060405180830381865afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610396919061049c565b6103a091906104b5565b92915050565b600060016103b2610182565b815481106103c2576103c2610444565b906000526020600020906002020160000154905090565b6000602082840312156103eb57600080fd5b5035919050565b60006020828403121561040457600080fd5b81356001600160a01b038116811461041b57600080fd5b9392505050565b6000806040838503121561043557600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016104825761048261045a565b5060010190565b808201808211156103a0576103a061045a565b6000602082840312156104ae57600080fd5b5051919050565b818103818111156103a0576103a061045a56fea2646970667358221220bd158f930cc091a8576f6a761a4360d46c80605d4827764b67d78c017ce1630d64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 19,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "tokenContract",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IMyToken)11"
      },
      {
        "astId": 23,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "proposals",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Proposal)16_storage)dyn_storage"
      },
      {
        "astId": 25,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "targetBlockNumber",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "votePowerSpent",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Proposal)16_storage)dyn_storage": {
        "base": "t_struct(Proposal)16_storage",
        "encoding": "dynamic_array",
        "label": "struct TokenizedBallot.Proposal[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IMyToken)11": {
        "encoding": "inplace",
        "label": "contract IMyToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Proposal)16_storage": {
        "encoding": "inplace",
        "label": "struct TokenizedBallot.Proposal",
        "members": [
          {
            "astId": 13,
            "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 15,
            "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
            "label": "voteCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}